{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Navbar/Footer.js","Components/SearchBar/SearchBar.jsx","MovieApi/MovieAxios.js","MovieApi/MovieREST.js","MovieApi/TvREST.js","Components/MovieCard/MovieCard.jsx","Components/MovieCardHolder/MovieCardHolder.jsx","Pages/Home/Home.jsx","Components/Providers/Providers.jsx","Components/Seasons/Seasons.jsx","Pages/MovieProfilePage/MovieProfile.jsx","Pages/PopularPage/Popular.jsx","Pages/NowPlaying/NowPlaying.jsx","Pages/Upcoming/Upcoming.jsx","Components/TopButton/TopButton.jsx","Pages/Main/Main.jsx","App.js","index.js"],"names":["Navbar","props","id","className","to","pathname","reset","style","textDecoration","replace","fontSize","fontWeight","color","fontFamily","isMovie","paddingLeft","marginRight","activeStyle","backgroundColor","onClick","e","stopPropagation","elem","document","getElementById","classList","contains","remove","add","toggleHandler","zIndex","Footer","SearchBar","onSubmit","preventDefault","getResults","type","placeholder","required","autoComplete","onChange","setSearch","target","value","onFocus","display","axios","create","baseURL","headers","this","apiKey","http","get","query","queryURI","escape","page","cancelToken","seasonNumber","MovieCard","imgURL","data","undefined","src","alt","original_title","original_name","MovieCardHolder","history","useHistory","movies","map","movie","path","location","pos","window","pageYOffset","sessionStorage","setItem","scrollTo","scrollHandler","Home","setNav","useState","getItem","search","JSON","parse","setMovies","MovieREST","TvREST","ADAPTER","useEffect","stringify","getSearchResults","a","searchWithQuery","res","arr","results","push","length","Providers","providers","country","setCountry","Map","countryMap","setCountryMap","flatRate","setFlatRate","currentProv","flatrate","getAndSetCountryList","getCountryList","response","sort","b","english_name","tempMap","forEach","x","set","iso_3166_1","Array","from","size","name","keys","index","padding","idx","logo_path","Seasons","seasons","movieid","season","setSeason","episodes","setEpisodes","getSeasonInfo","info","season_number","episode","episode_number","overview","MovieProfile","isMovieState","passedMovie","currentMovieId","substring","setMovie","castIndex","console","log","getMovieDetails","useCallback","details","credits","rec","similar","getCredits","getReccomendation","getSimilar","getProviders","findByMovieId","Promise","all","filter","poster_path","isSub","newmov","then","newobj","Object","assign","cr","run","backdrop_path","paddingRight","textShadow","vote_average","cast","record","character","fontStyle","marginLeft","release_date","first_air_date","textAlign","Popular","pages","setPages","getPopularMovies","i","getPopular","pop","filtered","original_language","parseInt","setPos","setTimeout","scrollMethod","source","CancelToken","token","catch","cancel","body","scrollTop","documentElement","loadHandler","NowPlaying","getNowPlaying","Upcoming","getUpcoming","TopButton","onscroll","onclick","Main","App","setIsMovie","setTag","exact","component","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3ba33a36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  const toggleHandler = (e) => {\r\n    e.stopPropagation();\r\n    const elem = document.getElementById(\"mobile-menu\");\r\n    if (elem.classList.contains(\"toggle\")) {\r\n      elem.classList.remove(\"toggle\");\r\n    } else {\r\n      elem.classList.add(\"toggle\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"n\" className=\"navbar\">\r\n      <Link\r\n        to={{ pathname: \"/Home\", reset: true }}\r\n        style={{ textDecoration: \"none\" }}\r\n        replace\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: \"4vh\",\r\n            fontWeight: \"900\",\r\n            color: \"black\",\r\n            fontFamily: \"CeraBold\",\r\n          }}\r\n        >\r\n          {props.isMovie && \"Movies\"}\r\n          {!props.isMovie && \"Tv shows\"}\r\n          <i\r\n            style={{\r\n              paddingLeft: \"1vw\",\r\n              fontSize: \"3vh\",\r\n              color: \"black\",\r\n            }}\r\n            className=\"fas fa-tv fa-2x\"\r\n          ></i>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"link-cont\">\r\n        <Link\r\n          to={{ pathname: \"/\", reset: true }}\r\n          style={{ textDecoration: \"none\", marginRight: \"2vw\" }}\r\n          replace\r\n        >\r\n          <i\r\n            style={{ color: \"black\", fontSize: \"1.8vw\" }}\r\n            className=\"fas fa-home\"\r\n          ></i>\r\n        </Link>\r\n\r\n        <Link\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n          to=\"/Popular\"\r\n        >\r\n          <div className=\"nav-list-element\">Popular</div>\r\n        </Link>\r\n        <Link\r\n          to=\"/NowPlaying\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">\r\n            {props.isMovie && \"In Cinemas\"}\r\n            {!props.isMovie && \"Now Airing\"}\r\n          </div>\r\n        </Link>\r\n\r\n        <Link\r\n          to=\"/Upcoming\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">Upcoming</div>\r\n        </Link>\r\n      </div>\r\n      <i\r\n        onClick={(e) => toggleHandler(e)}\r\n        className=\"fas fa-bars fa-1x mobile-icon\"\r\n        style={{ color: \"rgb(150, 150, 150)\" }}\r\n      ></i>\r\n      <div\r\n        id=\"mobile-menu\"\r\n        className=\"div-cont-mobile \"\r\n        style={{ zIndex: \"1\" }}\r\n      >\r\n        <Link\r\n          to={{ pathname: \"/\", reset: true }}\r\n          style={{ color: \"yellow\" }}\r\n          className=\"nav-link\"\r\n          replace\r\n        >\r\n          <div className=\"nav-list-element\">Home</div>\r\n        </Link>\r\n        <Link\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n          to=\"/Popular\"\r\n        >\r\n          <div className=\"nav-list-element\">Popular</div>\r\n        </Link>\r\n        <Link\r\n          to=\"/NowPlaying\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">\r\n            {props.isMovie && \"In Cinemas\"}\r\n            {!props.isMovie && \"Now Airing\"}\r\n          </div>\r\n        </Link>\r\n\r\n        <Link\r\n          to=\"/Upcoming\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">Upcoming</div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p\r\n        style={{\r\n          fontSize: \"2vw\",\r\n          color: \"#DCEC11\",\r\n        }}\r\n      >\r\n        {`API provided by themoviedb.org & justwatch.com`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          props.getResults();\r\n        }}\r\n      >\r\n        <input\r\n          className=\"search-bar search-bar-position\"\r\n          id=\"search\"\r\n          type=\"search\"\r\n          placeholder={`Search for ${props.isMovie ? \"movies\" : \"tv shows\"}...`}\r\n          required\r\n          autoComplete=\"off\"\r\n          onChange={(e) => props.setSearch(e.target.value)}\r\n          onFocus={(e) => (e.target.value = \"\")}\r\n        />\r\n        <input type=\"submit\" style={{ display: \"none\" }} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"./MovieAxios\";\r\n\r\nclass MovieREST {\r\n  constructor() {\r\n    this.apiKey = \"?api_key=4198345852c55a862ccb220b37954952\";\r\n  }\r\n\r\n  findByMovieId(id) {\r\n    return http.get(`/movie/${id}${this.apiKey}`);\r\n  }\r\n\r\n  searchWithQuery(query) {\r\n    const queryURI = escape(query);\r\n    return http.get(\r\n      `/search/movie${this.apiKey}&language=en-US&query=${queryURI}&page=1&include_adult=false`\r\n    );\r\n  }\r\n\r\n  getReccomendation(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/recommendations${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getSimilar(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/similar${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getPopular(page, cancelToken) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/popular${this.apiKey}&language=en-US&page=${page}`,\r\n      { cancelToken: cancelToken }\r\n    );\r\n  }\r\n\r\n  getNowPlaying() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/now_playing${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getUpcoming() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/upcoming${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReviews(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReleaseDate(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/release_dates${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCredits(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n\r\n  getProviders(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/watch/providers${this.apiKey}`\r\n    );\r\n  }\r\n}\r\n\r\nexport default new MovieREST();\r\n","import http from \"./MovieAxios\";\r\n\r\nclass TvREST {\r\n  constructor() {\r\n    this.apiKey = \"?api_key=4198345852c55a862ccb220b37954952\";\r\n  }\r\n\r\n  findByMovieId(id) {\r\n    return http.get(`/tv/${id}${this.apiKey}`);\r\n  }\r\n\r\n  searchWithQuery(query) {\r\n    const queryURI = escape(query);\r\n    return http.get(\r\n      `/search/tv${this.apiKey}&language=en-US&query=${queryURI}&page=1&include_adult=false`\r\n    );\r\n  }\r\n\r\n  getReccomendation(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/recommendations${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getSimilar(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/similar${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getPopular(page, cancelToken) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/popular${this.apiKey}&language=en-US&page=${page}`,\r\n      { cancelToken: cancelToken }\r\n    );\r\n  }\r\n\r\n  getNowPlaying() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/airing_today${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getUpcoming() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/on_the_air${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReviews(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReleaseDate(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/release_dates${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCredits(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/credits${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n\r\n  getProviders(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/watch/providers${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCountryList() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/configuration/countries${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getSeasonInfo(id, seasonNumber) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TvREST();\r\n","import React from \"react\";\r\nimport \"./MovieCard.css\";\r\n\r\nconst MovieCard = (props) => {\r\n  const imgURL =\r\n    props.data[\"poster_path\"] === null\r\n      ? \"\"\r\n      : `http://image.tmdb.org/t/p/w500${props.data[\"poster_path\"]}`;\r\n  return (\r\n    props.data[\"poster_path\"] !== undefined && (\r\n      <div className=\"movie-card\">\r\n        <img\r\n          className=\"movie-card-img\"\r\n          src={imgURL}\r\n          alt={props.data.original_title || props.data.original_name}\r\n        ></img>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\n\r\nimport \"./MovieCardHolder.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst MovieCardHolder = (props) => {\r\n  const history = useHistory();\r\n\r\n  const scrollHandler = () => {\r\n    const path = history.location.pathname;\r\n    const pos = window.pageYOffset;\r\n    sessionStorage.setItem(`scroll${path}`, pos);\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"movie-container\">\r\n        {props.movies.map((movie) => (\r\n          <Link\r\n            key={movie.id}\r\n            to={{ pathname: `/MovieProfile/${movie.id}`, movie }}\r\n          >\r\n            <div onClick={() => scrollHandler()} className=\"movie-card-wrapper\">\r\n              <MovieCard data={movie} />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCardHolder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = ({ setNav }) => {\r\n  const [isMovie] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\r\n  );\r\n  const [search, setSearch] = useState(\"\");\r\n  const [movies, setMovies] = useState(\r\n    JSON.parse(sessionStorage.getItem(\"movies\")) || \"\"\r\n  );\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  useEffect(() => {\r\n    setNav();\r\n  }, [setNav]);\r\n\r\n  useEffect(() => {\r\n    setMovies(\"\");\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"movies\", JSON.stringify(movies));\r\n  }, [movies]);\r\n\r\n  const getSearchResults = async () => {\r\n    const res = await ADAPTER.searchWithQuery(search);\r\n    const arr = [];\r\n    for (let movie of res.data.results) {\r\n      movie[\"poster_path\"] !== null &&\r\n        movie[\"original_language\"] === \"en\" &&\r\n        movie[\"popularity\"] > 15 &&\r\n        movie[\"vote_count\"] > 30 &&\r\n        movie[\"backdrop_path\"] !== null &&\r\n        arr.push(movie);\r\n    }\r\n    setMovies(arr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies.length === 0 && (\r\n        <div className=\"middle-text-cont\">\r\n          An application to help you find similar movies to your favourite\r\n          content\r\n        </div>\r\n      )}\r\n\r\n      <SearchBar\r\n        search={search}\r\n        setSearch={setSearch}\r\n        getResults={getSearchResults}\r\n        length={movies.length}\r\n        isMovie={isMovie}\r\n      />\r\n      {movies.length !== 0 && (\r\n        <>\r\n          <MovieCardHolder movies={movies} />\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport \"./Provider.css\";\r\n\r\nconst Providers = ({ providers }) => {\r\n  const [country, setCountry] = useState(\r\n    JSON.parse(sessionStorage.getItem(\"country\")) || \"Denmark\"\r\n  );\r\n  const [countryMap, setCountryMap] = useState(\r\n    new Map(JSON.parse(sessionStorage.getItem(\"countryMap\"))) || new Map()\r\n  );\r\n\r\n  const [flatRate, setFlatRate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (providers !== undefined) {\r\n      if (providers.results[countryMap.get(country)] !== undefined) {\r\n        const currentProv = providers.results[countryMap.get(country)];\r\n        if (currentProv.flatrate !== undefined) {\r\n          setFlatRate(currentProv.flatrate);\r\n        }\r\n      } else setFlatRate([]);\r\n    }\r\n  }, [country, countryMap, providers]);\r\n\r\n  useEffect(() => {\r\n    const getAndSetCountryList = async () => {\r\n      const response = await TvREST.getCountryList();\r\n      let arr = [...response.data];\r\n      arr.sort(function (a, b) {\r\n        if (a.english_name < b.english_name) {\r\n          return -1;\r\n        }\r\n        if (a.english_name > b.english_name) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n      const tempMap = new Map();\r\n      arr.forEach((x) => {\r\n        tempMap.set(x.english_name, x.iso_3166_1);\r\n      });\r\n      setCountryMap(tempMap);\r\n      sessionStorage.setItem(\"countryMap\", JSON.stringify(Array.from(tempMap)));\r\n    };\r\n    if (countryMap.size === 0) getAndSetCountryList();\r\n  }, [countryMap]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"prov-disp\">\r\n        <select\r\n          className=\"country-selector\"\r\n          name=\"Country\"\r\n          id=\"country\"\r\n          value={country}\r\n          onChange={(e) => {\r\n            setCountry(e.target.value);\r\n            sessionStorage.setItem(\"country\", JSON.stringify(e.target.value));\r\n          }}\r\n        >\r\n          {[...countryMap.keys()].map((country, index) => {\r\n            return (\r\n              <option\r\n                key={index}\r\n                value={country}\r\n                style={{ fontSize: \"16px\", padding: \"1vh\" }}\r\n              >\r\n                {country}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"prov-disp-2\">\r\n        {flatRate.length !== 0 &&\r\n          flatRate.map((x, idx) => {\r\n            return (\r\n              <img\r\n                key={idx}\r\n                style={{ marginRight: \"1vw\" }}\r\n                className=\"provider-img\"\r\n                src={`https://image.tmdb.org/t/p/w500${x.logo_path}`}\r\n                alt={x.name}\r\n              ></img>\r\n            );\r\n          })}\r\n        {flatRate.length === 0 &&\r\n          \"No streaming service available in this country...\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Providers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Seasons.css\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\n\r\nconst Seasons = ({ seasons, movieid }) => {\r\n  const [season, setSeason] = useState(1);\r\n  const [episodes, setEpisodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getSeasonInfo = async (id, seasonNumber) => {\r\n      const info = await TvREST.getSeasonInfo(id, seasonNumber);\r\n      setEpisodes(info.data.episodes);\r\n    };\r\n    getSeasonInfo(movieid, season);\r\n  }, [movieid, season]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <select\r\n          className=\"season-selector\"\r\n          value={season}\r\n          onChange={(e) => {\r\n            setSeason(e.target.value);\r\n          }}\r\n        >\r\n          {seasons.map((x, idx) => {\r\n            return (\r\n              <option value={x.season_number} key={idx}>\r\n                {x.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"episode-container\">\r\n          {episodes.map((episode, idx) => {\r\n            return (\r\n              <div className=\"episode-record\" key={idx}>\r\n                <div>\r\n                  S{episode.season_number} E{episode.episode_number}:{\" \"}\r\n                  <span\r\n                    className=\"episode\"\r\n                    id={idx}\r\n                    onClick={(e) => {\r\n                      const elem = document.getElementById(`d${e.target.id}`);\r\n                      if (elem.style.display === \"none\") {\r\n                        elem.style.display = \"block\";\r\n                      } else {\r\n                        elem.style.display = \"none\";\r\n                      }\r\n                    }}\r\n                  >\r\n                    {episode.name}\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  id={`d${idx}`}\r\n                  className=\"episode-desc\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  {episode.overview}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seasons;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport MovieCard from \"../../Components/MovieCard/MovieCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./MovieProfile.css\";\r\n// import Similar from \"../../Components/SimilarMovies/Similar\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport Providers from \"../../Components/Providers/Providers\";\r\nimport Seasons from \"../../Components/Seasons/Seasons\";\r\n\r\nconst MovieProfile = () => {\r\n  const [isMovieState] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\r\n  );\r\n  const passedMovie = useHistory().location.movie;\r\n  const currentMovieId = useHistory().location.pathname.substring(14);\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n  let castIndex = 0;\r\n\r\n  useEffect(() => {\r\n    console.log(movie);\r\n  }, [movie]);\r\n\r\n  const getMovieDetails = useCallback(\r\n    async (id) => {\r\n      let details = {\r\n        credits: null,\r\n        rec: null,\r\n        similar: null,\r\n        providers: null,\r\n        info: null,\r\n      };\r\n\r\n      const credits = await ADAPTER.getCredits(id);\r\n      const rec = await ADAPTER.getReccomendation(id);\r\n      const similar = await ADAPTER.getSimilar(id);\r\n      const providers = await ADAPTER.getProviders(id);\r\n      const info = await ADAPTER.findByMovieId(id);\r\n\r\n      const res = await Promise.all([credits, rec, similar, providers, info]);\r\n\r\n      details.credits = res[0].data;\r\n      details.rec = res[1].data.results.filter((x) => x.poster_path !== null);\r\n      details.similar = res[2].data.results.filter(\r\n        (x) => x.poster_path !== null\r\n      );\r\n      details.providers = res[3].data;\r\n      details.info = res[4].data;\r\n\r\n      return details;\r\n    },\r\n    [ADAPTER]\r\n  );\r\n  // workaround for persisting state without browserrouter\r\n  useEffect(() => {\r\n    let isSub = true;\r\n    if (passedMovie !== undefined) {\r\n      setMovie(passedMovie);\r\n      sessionStorage.setItem(\r\n        `movieprofile${currentMovieId}`,\r\n        JSON.stringify(passedMovie)\r\n      );\r\n    }\r\n    const newmov = JSON.parse(\r\n      sessionStorage.getItem(`movieprofile${currentMovieId}`)\r\n    );\r\n    if (newmov.rec === undefined) {\r\n      getMovieDetails(newmov.id).then((data) => {\r\n        const newobj = Object.assign({}, data, newmov);\r\n        const run = async () => {\r\n          await sessionStorage.setItem(\r\n            `movieprofile${currentMovieId}`,\r\n            JSON.stringify(newobj)\r\n          );\r\n\r\n          const cr = JSON.parse(\r\n            sessionStorage.getItem(`movieprofile${currentMovieId}`)\r\n          );\r\n\r\n          if (isSub) setMovie(cr);\r\n        };\r\n        run();\r\n      });\r\n    }\r\n\r\n    setMovie(\r\n      JSON.parse(sessionStorage.getItem(`movieprofile${currentMovieId}`))\r\n    );\r\n\r\n    return () => (isSub = false);\r\n  }, [currentMovieId, passedMovie, getMovieDetails]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          className=\"backdrop\"\r\n          src={`http://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n        ></img>\r\n      </div>\r\n\r\n      <div className=\"profile-cont\">\r\n        <div className=\"wrapper\">\r\n          <div>\r\n            <MovieCard data={movie} />\r\n            <p className=\"rating\">\r\n              <i\r\n                style={{\r\n                  paddingRight: \"1vw\",\r\n                  fontSize: \"7vmin\",\r\n                  color: \"#FFD700\",\r\n                  textShadow: \"0 0 5px black\",\r\n                }}\r\n                className=\"fas fa-star fa-1x\"\r\n              ></i>\r\n              <span style={{ color: \"#FFD700\", textShadow: \"0 0 10px black\" }}>\r\n                {movie.vote_average}\r\n              </span>\r\n            </p>\r\n            <div className=\"cast\">\r\n              {movie !== \"\" &&\r\n                movie.credits !== undefined &&\r\n                movie.credits.cast.map((record) => {\r\n                  return (\r\n                    <div key={castIndex++} className=\"cast-record\">\r\n                      <span className=\"cell\">{record.name}</span>\r\n                      <span className=\"cell2\">{record.character}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-cont\">\r\n            <div className=\"title-cont\">\r\n              <h2 className=\"movie-title\">\r\n                {movie.original_title || movie.original_name} (\r\n                <span\r\n                  style={{\r\n                    fontStyle: \"italic\",\r\n                    color: \"rgb(120,120,120)\",\r\n                    marginLeft: \"1vw\",\r\n                    marginRight: \"1vw\",\r\n                  }}\r\n                >\r\n                  {movie !== \"\" &&\r\n                    ((movie.release_date !== undefined &&\r\n                      movie.release_date.substring(0, 4)) ||\r\n                      (movie.first_air_date !== undefined &&\r\n                        movie.first_air_date.substring(0, 4)))}\r\n                </span>\r\n                )\r\n              </h2>\r\n            </div>\r\n            <div className=\"desc-cont\">\r\n              <p className=\"movie-desc\">{movie.overview}</p>\r\n            </div>\r\n            <div className=\"prov-cont\">\r\n              <Providers providers={movie.providers} />\r\n            </div>\r\n            <div className=\"seas-cont\">\r\n              {!isMovieState && movie.info !== undefined && (\r\n                <Seasons seasons={movie.info.seasons} movieid={movie.id} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"6vmin\",\r\n            fontFamily: \"CeraBold\",\r\n\r\n            padding: \"1vh 0\",\r\n          }}\r\n        >\r\n          {`Recommended ${isMovieState ? \"movies\" : \"tv shows\"}`}\r\n        </h2>\r\n        {movie.rec !== undefined && <MovieCardHolder movies={movie.rec} />}\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"6vmin\",\r\n\r\n            padding: \"1vh 0\",\r\n          }}\r\n        >\r\n          {`Similar ${\r\n            isMovieState ? \"movies\" : \"tv shows\"\r\n          } based on keywords and genres`}\r\n        </h2>\r\n        {movie.similar !== undefined && (\r\n          <MovieCardHolder movies={movie.similar} />\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieProfile;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport axios from \"axios\";\r\nimport \"./Popular.css\";\r\n\r\nconst Popular = () => {\r\n  const history = useHistory();\r\n  const [movies, setMovies] = useState(\r\n    JSON.parse(sessionStorage.getItem(`${history.location.path}`)) || []\r\n  );\r\n  const [pages, setPages] = useState(\r\n    JSON.parse(sessionStorage.getItem(`${history.location.path}pages`)) || 1\r\n  );\r\n\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  const getPopularMovies = useCallback(\r\n    async (page, cancelToken) => {\r\n      let arr = [];\r\n      for (let i = 1; i <= page; i++) {\r\n        const pop = await ADAPTER.getPopular(i, cancelToken);\r\n        //console.log(pop.data);\r\n        const filtered = pop.data.results.filter(\r\n          (x) => x.original_language === \"en\"\r\n        );\r\n        arr = [...arr, ...filtered];\r\n      }\r\n\r\n      setMovies(arr);\r\n\r\n      sessionStorage.setItem(`${history.location.path}`, JSON.stringify(arr));\r\n      sessionStorage.setItem(`${history.location.path}pages`, pages);\r\n    },\r\n    [ADAPTER, history.location.path, pages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const scrollMethod = async () => {\r\n      const setPos = await parseInt(\r\n        sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n      );\r\n      setTimeout(() => {\r\n        window.scrollTo(0, setPos);\r\n      }, 100);\r\n    };\r\n    scrollMethod();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const cancelToken = axios.CancelToken;\r\n    const source = cancelToken.source();\r\n    getPopularMovies(pages, source.token).catch((e) => {});\r\n\r\n    return () => {\r\n      source.cancel(\"canceled async call\");\r\n    };\r\n  }, [pages, getPopularMovies]);\r\n\r\n  const loadHandler = () => {\r\n    setPages(pages + 1);\r\n    const path = history.location.pathname;\r\n    const pos = document.body.scrollTop || document.documentElement.scrollTop;\r\n    sessionStorage.setItem(`scroll${path}`, pos);\r\n  };\r\n  return (\r\n    <>\r\n      {movies !== null && movies.length !== 0 && (\r\n        <MovieCardHolder movies={movies} />\r\n      )}\r\n      <div className=\"load-cont\">\r\n        <div className=\"load-more-btn\" onClick={() => loadHandler()}>\r\n          Load more...\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\n\r\nconst NowPlaying = () => {\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const setPos = parseInt(\r\n      sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n    );\r\n    window.scrollTo(0, setPos);\r\n  }, [history.location.pathname]);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getNowPlaying = useCallback(async () => {\r\n    const arr = await ADAPTER.getNowPlaying();\r\n    const filtered = arr.data.results.filter(\r\n      (x) => x.original_language === \"en\"\r\n    );\r\n    setMovies(filtered);\r\n  }, [ADAPTER]);\r\n  useEffect(() => getNowPlaying(), [getNowPlaying]);\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && <MovieCardHolder movies={movies} />}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NowPlaying;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\n\r\nconst Upcoming = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const setPos = parseInt(\r\n      sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n    );\r\n    window.scrollTo(0, setPos);\r\n  }, [history.location.pathname]);\r\n\r\n  const getUpcoming = useCallback(async () => {\r\n    const arr = await ADAPTER.getUpcoming();\r\n    const filtered = arr.data.results.filter(\r\n      (x) => x.original_language === \"en\"\r\n    );\r\n    setMovies(filtered);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => getUpcoming(), [getUpcoming]);\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && <MovieCardHolder movies={movies} />}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upcoming;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./TopButton.css\";\r\nconst TopButton = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    window.onscroll = function () {\r\n      scrollHandler();\r\n    };\r\n    scrollHandler();\r\n    window.onclick = function () {\r\n      const elem = document.getElementById(\"mobile-menu\");\r\n\r\n      elem.classList.remove(\"toggle\");\r\n    };\r\n  }, []);\r\n\r\n  const scrollHandler = () => {\r\n    const elem = document.getElementById(\"top-button\");\r\n    if (\r\n      document.body.scrollTop > 500 ||\r\n      document.documentElement.scrollTop > 500\r\n    ) {\r\n      elem.style.display = \"block\";\r\n    } else {\r\n      elem.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n    sessionStorage.setItem(`scroll${history.location.pathname}`, 0);\r\n  };\r\n  return (\r\n    <i\r\n      onClick={() => clickHandler()}\r\n      id=\"top-button\"\r\n      className=\"fas fa-chevron-circle-up fa-3x top-button\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default TopButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Main.css\";\r\nconst Main = () => {\r\n  useEffect(() => {\r\n    const elem = document.getElementById(\"n\");\r\n    elem.classList.add(\"hide-nav\");\r\n\r\n    return () => elem.classList.remove(\"hide-nav\");\r\n  }, []);\r\n\r\n  const setTv = () => {\r\n    sessionStorage.setItem(\"SELECTOR\", \"tv\");\r\n  };\r\n\r\n  const setMovie = () => {\r\n    sessionStorage.setItem(\"SELECTOR\", \"movie\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n      <div className=\"select-cont\">\r\n        <Link to=\"/Home\" style={{ textDecoration: \"none\" }}>\r\n          <div onClick={() => setTv()} className=\"select\">\r\n            Tv-series\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/Home\" style={{ textDecoration: \"none\" }}>\r\n          <div onClick={() => setMovie()} className=\"select\">\r\n            Movies\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Navbar from \"./Components/Navbar/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport MovieProfile from \"./Pages/MovieProfilePage/MovieProfile\";\nimport \"./App.css\";\nimport Popular from \"./Pages/PopularPage/Popular\";\nimport NowPlaying from \"./Pages/NowPlaying/NowPlaying\";\nimport Upcoming from \"./Pages/Upcoming/Upcoming\";\nimport TopButton from \"./Components/TopButton/TopButton\";\nimport Main from \"./Pages/Main/Main\";\nimport { useState } from \"react\";\nimport Providers from \"./Components/Providers/Providers\";\n\nfunction App() {\n  const [isMovie, setIsMovie] = useState(\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\n  );\n  const setTag = () => {\n    setIsMovie(sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false);\n  };\n\n  return (\n    <>\n      <Navbar isMovie={isMovie} />\n      <TopButton />\n      <Switch>\n        <Route exact path=\"/\" component={Main}></Route>\n        <Route\n          exact\n          path=\"/Home\"\n          render={(props) => <Home {...props} setNav={setTag} />}\n        ></Route>\n        <Route\n          exact\n          path=\"/MovieProfile/:id\"\n          render={(props) => <MovieProfile {...props} />}\n        ></Route>\n        <Route exact path=\"/Popular\" component={Popular}></Route>\n        <Route exact path=\"/NowPlaying\" component={NowPlaying}></Route>\n        <Route exact path=\"/Upcoming\" component={Upcoming}></Route>\n        <Route exact path=\"/TEST\" component={Providers}></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}