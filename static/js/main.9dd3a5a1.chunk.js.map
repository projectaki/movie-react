{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Navbar/Footer.js","PrefixTree/PrefixTree.js","Components/SearchBar/SearchBar.jsx","MovieApi/MovieAxios.js","MovieApi/MovieREST.js","MovieApi/TvREST.js","Components/MovieCard/MovieCard.jsx","Components/MovieCardHolder/MovieCardHolder.jsx","Pages/Home/Home.jsx","Components/Providers/Providers.jsx","Components/Seasons/Seasons.jsx","Pages/MovieProfilePage/MovieProfile.jsx","Pages/PopularPage/Popular.jsx","Pages/NowPlaying/NowPlaying.jsx","Pages/Upcoming/Upcoming.jsx","Components/TopButton/TopButton.jsx","Pages/Main/Main.jsx","App.js","index.js"],"names":["Navbar","props","id","className","to","pathname","reset","style","textDecoration","replace","fontSize","fontWeight","color","fontFamily","isMovie","paddingLeft","marginRight","activeStyle","backgroundColor","onClick","e","stopPropagation","elem","document","getElementById","classList","contains","remove","add","toggleHandler","zIndex","Footer","Node","this","children","Map","value","isWord","passed","PrefixTree","addWordRec","word","node","index","length","has","charAt","get","toInsert","set","listPossibilities","prefix","k","searchStartNode","_getNodeAtEndOfPrefix","listOfWords","queue","push","currentNode","shift","wordSoFar","forEach","x","_getNodeAtEndOfPrefixRec","root","currentChar","lower","toLowerCase","upper","toUpperCase","res","SearchBar","useState","results","setResults","query","setQuery","loaded","setLoaded","pT","setPT","useEffect","temp","data","item","addWord","onSubmit","search","preventDefault","getResults","setSearch","type","placeholder","autoComplete","onChange","target","display","map","result","idx","axios","create","baseURL","headers","apiKey","http","queryURI","escape","page","cancelToken","seasonNumber","MovieCard","imgURL","undefined","src","alt","original_title","original_name","MovieCardHolder","history","useHistory","movies","movie","path","location","pos","window","pageYOffset","sessionStorage","setItem","scrollTo","scrollHandler","Home","setNav","getItem","JSON","parse","setMovies","MovieREST","TvREST","ADAPTER","stringify","getSearchResults","a","searchWithQuery","arr","Providers","providers","country","setCountry","countryMap","setCountryMap","flatRate","setFlatRate","currentProv","flatrate","getAndSetCountryList","getCountryList","response","sort","b","english_name","tempMap","iso_3166_1","Array","from","size","name","keys","padding","logo_path","Seasons","seasons","movieid","season","setSeason","episodes","setEpisodes","getSeasonInfo","info","season_number","episode","episode_number","overview","MovieProfile","isMovieState","passedMovie","currentMovieId","substring","setMovie","castIndex","console","log","getMovieDetails","useCallback","details","credits","rec","similar","getCredits","getReccomendation","getSimilar","getProviders","findByMovieId","Promise","all","filter","poster_path","isSub","newmov","then","newobj","Object","assign","cr","run","backdrop_path","paddingRight","textShadow","vote_average","cast","record","character","fontStyle","marginLeft","release_date","first_air_date","textAlign","Popular","pages","setPages","getPopularMovies","i","getPopular","pop","filtered","original_language","parseInt","setPos","setTimeout","scrollMethod","source","CancelToken","token","catch","cancel","body","scrollTop","documentElement","loadHandler","NowPlaying","getNowPlaying","Upcoming","getUpcoming","TopButton","onscroll","onclick","Main","App","setIsMovie","setTag","exact","component","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9dd3a5a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  const toggleHandler = (e) => {\r\n    e.stopPropagation();\r\n    const elem = document.getElementById(\"mobile-menu\");\r\n    if (elem.classList.contains(\"toggle\")) {\r\n      elem.classList.remove(\"toggle\");\r\n    } else {\r\n      elem.classList.add(\"toggle\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"n\" className=\"navbar\">\r\n      <Link\r\n        to={{ pathname: \"/Home\", reset: true }}\r\n        style={{ textDecoration: \"none\" }}\r\n        replace\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: \"4vh\",\r\n            fontWeight: \"900\",\r\n            color: \"black\",\r\n            fontFamily: \"CeraBold\",\r\n          }}\r\n        >\r\n          {props.isMovie && \"Movies\"}\r\n          {!props.isMovie && \"Tv shows\"}\r\n          <i\r\n            style={{\r\n              paddingLeft: \"1vw\",\r\n              fontSize: \"3vh\",\r\n              color: \"black\",\r\n            }}\r\n            className=\"fas fa-tv fa-2x\"\r\n          ></i>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"link-cont\">\r\n        <Link\r\n          to={{ pathname: \"/\", reset: true }}\r\n          style={{ textDecoration: \"none\", marginRight: \"2vw\" }}\r\n          replace\r\n        >\r\n          <i\r\n            style={{ color: \"black\", fontSize: \"1.8vw\" }}\r\n            className=\"fas fa-home\"\r\n          ></i>\r\n        </Link>\r\n\r\n        <Link\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n          to=\"/Popular\"\r\n        >\r\n          <div className=\"nav-list-element\">Popular</div>\r\n        </Link>\r\n        <Link\r\n          to=\"/NowPlaying\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">\r\n            {props.isMovie && \"In Cinemas\"}\r\n            {!props.isMovie && \"Now Airing\"}\r\n          </div>\r\n        </Link>\r\n\r\n        <Link\r\n          to=\"/Upcoming\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">Upcoming</div>\r\n        </Link>\r\n      </div>\r\n      <i\r\n        onClick={(e) => toggleHandler(e)}\r\n        className=\"fas fa-bars fa-1x mobile-icon\"\r\n        style={{ color: \"rgb(150, 150, 150)\" }}\r\n      ></i>\r\n      <div\r\n        id=\"mobile-menu\"\r\n        className=\"div-cont-mobile \"\r\n        style={{ zIndex: \"1\" }}\r\n      >\r\n        <Link\r\n          to={{ pathname: \"/\", reset: true }}\r\n          style={{ color: \"yellow\" }}\r\n          className=\"nav-link\"\r\n          replace\r\n        >\r\n          <div className=\"nav-list-element\">Home</div>\r\n        </Link>\r\n        <Link\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n          to=\"/Popular\"\r\n        >\r\n          <div className=\"nav-list-element\">Popular</div>\r\n        </Link>\r\n        <Link\r\n          to=\"/NowPlaying\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">\r\n            {props.isMovie && \"In Cinemas\"}\r\n            {!props.isMovie && \"Now Airing\"}\r\n          </div>\r\n        </Link>\r\n\r\n        <Link\r\n          to=\"/Upcoming\"\r\n          activeStyle={{ backgroundColor: \"#CAC40E\", color: \"black\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <div className=\"nav-list-element\">Upcoming</div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p\r\n        style={{\r\n          fontSize: \"2vw\",\r\n          color: \"#DCEC11\",\r\n        }}\r\n      >\r\n        {`API provided by themoviedb.org & justwatch.com`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","class Node {\r\n  constructor() {\r\n    this.children = new Map();\r\n    this.value = \"\";\r\n    this.isWord = false;\r\n    this.passed = \"\";\r\n  }\r\n}\r\nexport class PrefixTree {\r\n  constructor() {\r\n    this.root = new Node();\r\n  }\r\n\r\n  // recursively add a word to the prefix tree\r\n  addWord(word) {\r\n    this.addWordRec(word, this.root, 0);\r\n  }\r\n\r\n  // recurse add helper method\r\n  addWordRec = (word, node, index) => {\r\n    // word is inserted, we are done\r\n    if (word.length === index) {\r\n      return;\r\n    }\r\n    // if children contains the letter, then continue adding the word\r\n    if (node.children.has(word.charAt(index))) {\r\n      if (index === word.length - 1)\r\n        node.children.get(word.charAt(index)).isWord = true;\r\n      this.addWordRec(word, node.children.get(word.charAt(index)), index + 1);\r\n    } else {\r\n      const toInsert = new Node();\r\n      toInsert.value = word.charAt(index);\r\n      if (index === word.length - 1) toInsert.isWord = true;\r\n      node.children.set(word.charAt(index), toInsert);\r\n\r\n      this.addWordRec(word, node.children.get(word.charAt(index)), index + 1);\r\n    }\r\n  };\r\n\r\n  listPossibilities = (prefix, k = 15) => {\r\n    if (prefix === \"\") return [];\r\n    const searchStartNode = this._getNodeAtEndOfPrefix(prefix);\r\n\r\n    const listOfWords = [];\r\n    if (searchStartNode !== null) {\r\n      // searchStartNode.passed = prefix.substring(0, prefix.length - 1);\r\n\r\n      const queue = [];\r\n      queue.push(searchStartNode);\r\n      while (queue.length !== 0) {\r\n        const currentNode = queue.shift();\r\n        const wordSoFar = currentNode.passed;\r\n        if (currentNode.isWord) listOfWords.push(wordSoFar);\r\n        if (listOfWords.length === k) return listOfWords; // stop searching after k hits for optimisation\r\n        const children = currentNode.children;\r\n\r\n        children.forEach((x) => {\r\n          x.passed = wordSoFar + x.value;\r\n          queue.push(x);\r\n        });\r\n      }\r\n    }\r\n    return listOfWords;\r\n  };\r\n\r\n  _getNodeAtEndOfPrefix = (prefix) => {\r\n    const val = this._getNodeAtEndOfPrefixRec(prefix, this.root, 0);\r\n    return val;\r\n  };\r\n\r\n  _getNodeAtEndOfPrefixRec = (prefix, node, index) => {\r\n    if (index === prefix.length) return node;\r\n    const currentChar = prefix.charAt(index);\r\n\r\n    const lower = currentChar.toLowerCase();\r\n    const upper = currentChar.toUpperCase();\r\n\r\n    if (node.children.has(lower) || node.children.has(upper)) {\r\n      const res = node.children.get(lower) || node.children.get(upper);\r\n      res.passed = node.passed + res.value;\r\n      return this._getNodeAtEndOfPrefixRec(prefix, res, index + 1);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport data from \"../../topmovies.json\";\r\nimport { PrefixTree } from \"../../PrefixTree/PrefixTree\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [results, setResults] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [pT, setPT] = useState(new PrefixTree());\r\n\r\n  useEffect(() => {\r\n    const temp = new PrefixTree();\r\n    for (let item of data) {\r\n      temp.addWord(item);\r\n    }\r\n    setPT(temp);\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loaded) {\r\n      const res = pT.listPossibilities(query, 10);\r\n\r\n      setResults(res);\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-cont\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            if (props.search.length) {\r\n              e.preventDefault();\r\n              props.getResults();\r\n              setQuery(\"\");\r\n              props.setSearch(\"\");\r\n            }\r\n          }}\r\n        >\r\n          <input\r\n            className=\"search-bar search-bar-position\"\r\n            id=\"search\"\r\n            type=\"search\"\r\n            placeholder={`Search for ${\r\n              props.isMovie ? \"movies\" : \"tv shows\"\r\n            }...`}\r\n            autoComplete=\"off\"\r\n            value={props.search}\r\n            onChange={(e) => {\r\n              props.setSearch(e.target.value);\r\n              setQuery(e.target.value);\r\n            }}\r\n          />\r\n          <input type=\"submit\" style={{ display: \"none\" }} />\r\n          <div className=\"suggestion-cont\">\r\n            {results.map((result, idx) => {\r\n              return (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"suggestion-record\"\r\n                  key={idx}\r\n                  onClick={() => {\r\n                    setQuery(result);\r\n                    props.setSearch(result);\r\n                  }}\r\n                >\r\n                  {result}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"./MovieAxios\";\r\n\r\nclass MovieREST {\r\n  constructor() {\r\n    this.apiKey = \"?api_key=4198345852c55a862ccb220b37954952\";\r\n  }\r\n\r\n  findByMovieId(id) {\r\n    return http.get(`/movie/${id}${this.apiKey}`);\r\n  }\r\n\r\n  searchWithQuery(query) {\r\n    const queryURI = escape(query);\r\n    return http.get(\r\n      `/search/movie${this.apiKey}&language=en-US&query=${queryURI}&page=1&include_adult=false`\r\n    );\r\n  }\r\n\r\n  getReccomendation(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/recommendations${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getSimilar(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/similar${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getPopular(page, cancelToken) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/popular${this.apiKey}&language=en-US&page=${page}`,\r\n      { cancelToken: cancelToken }\r\n    );\r\n  }\r\n\r\n  getNowPlaying() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/now_playing${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getUpcoming() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/upcoming${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReviews(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReleaseDate(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/release_dates${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCredits(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n\r\n  getProviders(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/watch/providers${this.apiKey}`\r\n    );\r\n  }\r\n}\r\n\r\nexport default new MovieREST();\r\n","import http from \"./MovieAxios\";\r\n\r\nclass TvREST {\r\n  constructor() {\r\n    this.apiKey = \"?api_key=4198345852c55a862ccb220b37954952\";\r\n  }\r\n\r\n  findByMovieId(id) {\r\n    return http.get(`/tv/${id}${this.apiKey}`);\r\n  }\r\n\r\n  searchWithQuery(query) {\r\n    const queryURI = escape(query);\r\n    return http.get(\r\n      `/search/tv${this.apiKey}&language=en-US&query=${queryURI}&page=1&include_adult=false`\r\n    );\r\n  }\r\n\r\n  getReccomendation(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/recommendations${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getSimilar(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/similar${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getPopular(page, cancelToken) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/popular${this.apiKey}&language=en-US&page=${page}`,\r\n      { cancelToken: cancelToken }\r\n    );\r\n  }\r\n\r\n  getNowPlaying() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/airing_today${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getUpcoming() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/on_the_air${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReviews(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews${this.apiKey}&language=en-US&page=1`\r\n    );\r\n  }\r\n\r\n  getReleaseDate(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/release_dates${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCredits(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/credits${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n\r\n  getProviders(id) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/watch/providers${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getCountryList() {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/configuration/countries${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  getSeasonInfo(id, seasonNumber) {\r\n    return http.get(\r\n      `https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}${this.apiKey}&language=en-US`\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TvREST();\r\n","import React from \"react\";\r\nimport \"./MovieCard.css\";\r\n\r\nconst MovieCard = (props) => {\r\n  const imgURL =\r\n    props.data[\"poster_path\"] === null\r\n      ? \"\"\r\n      : `http://image.tmdb.org/t/p/w500${props.data[\"poster_path\"]}`;\r\n  return (\r\n    props.data[\"poster_path\"] !== undefined && (\r\n      <div className=\"movie-card\">\r\n        <img\r\n          className=\"movie-card-img\"\r\n          src={imgURL}\r\n          alt={props.data.original_title || props.data.original_name}\r\n        ></img>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\n\r\nimport \"./MovieCardHolder.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst MovieCardHolder = (props) => {\r\n  const history = useHistory();\r\n\r\n  const scrollHandler = () => {\r\n    const path = history.location.pathname;\r\n    const pos = window.pageYOffset;\r\n    sessionStorage.setItem(`scroll${path}`, pos);\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"movie-container\">\r\n        {props.movies.map((movie) => (\r\n          <Link\r\n            key={movie.id}\r\n            to={{ pathname: `/MovieProfile/${movie.id}`, movie }}\r\n          >\r\n            <div onClick={() => scrollHandler()} className=\"movie-card-wrapper\">\r\n              <MovieCard data={movie} />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCardHolder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = ({ setNav }) => {\r\n  const [isMovie] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\r\n  );\r\n  const [search, setSearch] = useState(\"\");\r\n  const [movies, setMovies] = useState(\r\n    JSON.parse(sessionStorage.getItem(\"movies\")) || \"\"\r\n  );\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  useEffect(() => {\r\n    setNav();\r\n  }, [setNav]);\r\n\r\n  useEffect(() => {\r\n    setMovies(\"\");\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"movies\", JSON.stringify(movies));\r\n  }, [movies]);\r\n\r\n  const getSearchResults = async () => {\r\n    const res = await ADAPTER.searchWithQuery(search);\r\n    const arr = [];\r\n    for (let movie of res.data.results) {\r\n      movie[\"poster_path\"] !== null &&\r\n        movie[\"original_language\"] === \"en\" &&\r\n        movie[\"backdrop_path\"] !== null &&\r\n        arr.push(movie);\r\n    }\r\n    setMovies(arr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies.length === 0 && (\r\n        <div className=\"middle-text-cont\">\r\n          An application to help you find similar movies to your favourite\r\n          content\r\n        </div>\r\n      )}\r\n\r\n      <SearchBar\r\n        search={search}\r\n        setSearch={setSearch}\r\n        getResults={getSearchResults}\r\n        length={movies.length}\r\n        isMovie={isMovie}\r\n      />\r\n      {movies.length !== 0 && (\r\n        <>\r\n          <MovieCardHolder movies={movies} />\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport \"./Provider.css\";\r\n\r\nconst Providers = ({ providers }) => {\r\n  const [country, setCountry] = useState(\r\n    JSON.parse(sessionStorage.getItem(\"country\")) || \"Denmark\"\r\n  );\r\n  const [countryMap, setCountryMap] = useState(\r\n    new Map(JSON.parse(sessionStorage.getItem(\"countryMap\"))) || new Map()\r\n  );\r\n\r\n  const [flatRate, setFlatRate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (providers !== undefined) {\r\n      if (providers.results[countryMap.get(country)] !== undefined) {\r\n        const currentProv = providers.results[countryMap.get(country)];\r\n        if (currentProv.flatrate !== undefined) {\r\n          setFlatRate(currentProv.flatrate);\r\n        }\r\n      } else setFlatRate([]);\r\n    }\r\n  }, [country, countryMap, providers]);\r\n\r\n  useEffect(() => {\r\n    const getAndSetCountryList = async () => {\r\n      const response = await TvREST.getCountryList();\r\n      let arr = [...response.data];\r\n      arr.sort(function (a, b) {\r\n        if (a.english_name < b.english_name) {\r\n          return -1;\r\n        }\r\n        if (a.english_name > b.english_name) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n      const tempMap = new Map();\r\n      arr.forEach((x) => {\r\n        tempMap.set(x.english_name, x.iso_3166_1);\r\n      });\r\n      setCountryMap(tempMap);\r\n      sessionStorage.setItem(\"countryMap\", JSON.stringify(Array.from(tempMap)));\r\n    };\r\n    if (countryMap.size === 0) getAndSetCountryList();\r\n  }, [countryMap]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"prov-disp\">\r\n        <select\r\n          className=\"country-selector\"\r\n          name=\"Country\"\r\n          id=\"country\"\r\n          value={country}\r\n          onChange={(e) => {\r\n            setCountry(e.target.value);\r\n            sessionStorage.setItem(\"country\", JSON.stringify(e.target.value));\r\n          }}\r\n        >\r\n          {[...countryMap.keys()].map((country, index) => {\r\n            return (\r\n              <option\r\n                key={index}\r\n                value={country}\r\n                style={{ fontSize: \"16px\", padding: \"1vh\" }}\r\n              >\r\n                {country}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"prov-disp-2\">\r\n        {flatRate.length !== 0 &&\r\n          flatRate.map((x, idx) => {\r\n            return (\r\n              <img\r\n                key={idx}\r\n                style={{ marginRight: \"1vw\" }}\r\n                className=\"provider-img\"\r\n                src={`https://image.tmdb.org/t/p/w500${x.logo_path}`}\r\n                alt={x.name}\r\n              ></img>\r\n            );\r\n          })}\r\n        {flatRate.length === 0 &&\r\n          \"No streaming service available in this country...\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Providers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Seasons.css\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\n\r\nconst Seasons = ({ seasons, movieid }) => {\r\n  const [season, setSeason] = useState(1);\r\n  const [episodes, setEpisodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getSeasonInfo = async (id, seasonNumber) => {\r\n      const info = await TvREST.getSeasonInfo(id, seasonNumber);\r\n      setEpisodes(info.data.episodes);\r\n    };\r\n    getSeasonInfo(movieid, season);\r\n  }, [movieid, season]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <select\r\n          className=\"season-selector\"\r\n          value={season}\r\n          onChange={(e) => {\r\n            setSeason(e.target.value);\r\n          }}\r\n        >\r\n          {seasons.map((x, idx) => {\r\n            return (\r\n              <option value={x.season_number} key={idx}>\r\n                {x.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"episode-container\">\r\n          {episodes.map((episode, idx) => {\r\n            return (\r\n              <div className=\"episode-record\" key={idx}>\r\n                <div>\r\n                  S{episode.season_number} E{episode.episode_number}:{\" \"}\r\n                  <span\r\n                    className=\"episode\"\r\n                    id={idx}\r\n                    onClick={(e) => {\r\n                      const elem = document.getElementById(`d${e.target.id}`);\r\n                      if (elem.style.display === \"none\") {\r\n                        elem.style.display = \"block\";\r\n                      } else {\r\n                        elem.style.display = \"none\";\r\n                      }\r\n                    }}\r\n                  >\r\n                    {episode.name}\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  id={`d${idx}`}\r\n                  className=\"episode-desc\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  {episode.overview}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seasons;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport MovieCard from \"../../Components/MovieCard/MovieCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./MovieProfile.css\";\r\n// import Similar from \"../../Components/SimilarMovies/Similar\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport Providers from \"../../Components/Providers/Providers\";\r\nimport Seasons from \"../../Components/Seasons/Seasons\";\r\n\r\nconst MovieProfile = () => {\r\n  const [isMovieState] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\r\n  );\r\n  const passedMovie = useHistory().location.movie;\r\n  const currentMovieId = useHistory().location.pathname.substring(14);\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n  let castIndex = 0;\r\n\r\n  useEffect(() => {\r\n    console.log(movie);\r\n  }, [movie]);\r\n\r\n  const getMovieDetails = useCallback(\r\n    async (id) => {\r\n      let details = {\r\n        credits: null,\r\n        rec: null,\r\n        similar: null,\r\n        providers: null,\r\n        info: null,\r\n      };\r\n\r\n      const credits = await ADAPTER.getCredits(id);\r\n      const rec = await ADAPTER.getReccomendation(id);\r\n      const similar = await ADAPTER.getSimilar(id);\r\n      const providers = await ADAPTER.getProviders(id);\r\n      const info = await ADAPTER.findByMovieId(id);\r\n\r\n      const res = await Promise.all([credits, rec, similar, providers, info]);\r\n\r\n      details.credits = res[0].data;\r\n      details.rec = res[1].data.results.filter((x) => x.poster_path !== null);\r\n      details.similar = res[2].data.results.filter(\r\n        (x) => x.poster_path !== null\r\n      );\r\n      details.providers = res[3].data;\r\n      details.info = res[4].data;\r\n\r\n      return details;\r\n    },\r\n    [ADAPTER]\r\n  );\r\n  // workaround for persisting state without browserrouter\r\n  useEffect(() => {\r\n    let isSub = true;\r\n    if (passedMovie !== undefined) {\r\n      setMovie(passedMovie);\r\n      sessionStorage.setItem(\r\n        `movieprofile${currentMovieId}`,\r\n        JSON.stringify(passedMovie)\r\n      );\r\n    }\r\n    const newmov = JSON.parse(\r\n      sessionStorage.getItem(`movieprofile${currentMovieId}`)\r\n    );\r\n    if (newmov.rec === undefined) {\r\n      getMovieDetails(newmov.id).then((data) => {\r\n        const newobj = Object.assign({}, data, newmov);\r\n        const run = async () => {\r\n          await sessionStorage.setItem(\r\n            `movieprofile${currentMovieId}`,\r\n            JSON.stringify(newobj)\r\n          );\r\n\r\n          const cr = JSON.parse(\r\n            sessionStorage.getItem(`movieprofile${currentMovieId}`)\r\n          );\r\n\r\n          if (isSub) setMovie(cr);\r\n        };\r\n        run();\r\n      });\r\n    }\r\n\r\n    setMovie(\r\n      JSON.parse(sessionStorage.getItem(`movieprofile${currentMovieId}`))\r\n    );\r\n\r\n    return () => (isSub = false);\r\n  }, [currentMovieId, passedMovie, getMovieDetails]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          className=\"backdrop\"\r\n          src={`http://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n        ></img>\r\n      </div>\r\n\r\n      <div className=\"profile-cont\">\r\n        <div className=\"wrapper\">\r\n          <div>\r\n            <MovieCard data={movie} />\r\n            <p className=\"rating\">\r\n              <i\r\n                style={{\r\n                  paddingRight: \"1vw\",\r\n                  fontSize: \"7vmin\",\r\n                  color: \"#FFD700\",\r\n                  textShadow: \"0 0 5px black\",\r\n                }}\r\n                className=\"fas fa-star fa-1x\"\r\n              ></i>\r\n              <span style={{ color: \"#FFD700\", textShadow: \"0 0 10px black\" }}>\r\n                {movie.vote_average}\r\n              </span>\r\n            </p>\r\n            <div className=\"cast\">\r\n              {movie !== \"\" &&\r\n                movie.credits !== undefined &&\r\n                movie.credits.cast.map((record) => {\r\n                  return (\r\n                    <div key={castIndex++} className=\"cast-record\">\r\n                      <span className=\"cell\">{record.name}</span>\r\n                      <span className=\"cell2\">{record.character}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-cont\">\r\n            <div className=\"title-cont\">\r\n              <h2 className=\"movie-title\">\r\n                {movie.original_title || movie.original_name} (\r\n                <span\r\n                  style={{\r\n                    fontStyle: \"italic\",\r\n                    color: \"rgb(120,120,120)\",\r\n                    marginLeft: \"1vw\",\r\n                    marginRight: \"1vw\",\r\n                  }}\r\n                >\r\n                  {movie !== \"\" &&\r\n                    ((movie.release_date !== undefined &&\r\n                      movie.release_date.substring(0, 4)) ||\r\n                      (movie.first_air_date !== undefined &&\r\n                        movie.first_air_date.substring(0, 4)))}\r\n                </span>\r\n                )\r\n              </h2>\r\n            </div>\r\n            <div className=\"desc-cont\">\r\n              <p className=\"movie-desc\">{movie.overview}</p>\r\n            </div>\r\n            <div className=\"prov-cont\">\r\n              <Providers providers={movie.providers} />\r\n            </div>\r\n            <div className=\"seas-cont\">\r\n              {!isMovieState && movie.info !== undefined && (\r\n                <Seasons seasons={movie.info.seasons} movieid={movie.id} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"6vmin\",\r\n            fontFamily: \"CeraBold\",\r\n\r\n            padding: \"1vh 0\",\r\n          }}\r\n        >\r\n          {`Recommended ${isMovieState ? \"movies\" : \"tv shows\"}`}\r\n        </h2>\r\n        {movie.rec !== undefined && <MovieCardHolder movies={movie.rec} />}\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"6vmin\",\r\n\r\n            padding: \"1vh 0\",\r\n          }}\r\n        >\r\n          {`Similar ${\r\n            isMovieState ? \"movies\" : \"tv shows\"\r\n          } based on keywords and genres`}\r\n        </h2>\r\n        {movie.similar !== undefined && (\r\n          <MovieCardHolder movies={movie.similar} />\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieProfile;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport axios from \"axios\";\r\nimport \"./Popular.css\";\r\n\r\nconst Popular = () => {\r\n  const history = useHistory();\r\n  const [movies, setMovies] = useState(\r\n    JSON.parse(sessionStorage.getItem(`${history.location.path}`)) || []\r\n  );\r\n  const [pages, setPages] = useState(\r\n    JSON.parse(sessionStorage.getItem(`${history.location.path}pages`)) || 1\r\n  );\r\n\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  const getPopularMovies = useCallback(\r\n    async (page, cancelToken) => {\r\n      let arr = [];\r\n      for (let i = 1; i <= page; i++) {\r\n        const pop = await ADAPTER.getPopular(i, cancelToken);\r\n        //console.log(pop.data);\r\n        const filtered = pop.data.results.filter(\r\n          (x) => x.original_language === \"en\"\r\n        );\r\n        arr = [...arr, ...filtered];\r\n      }\r\n\r\n      setMovies(arr);\r\n\r\n      sessionStorage.setItem(`${history.location.path}`, JSON.stringify(arr));\r\n      sessionStorage.setItem(`${history.location.path}pages`, pages);\r\n    },\r\n    [ADAPTER, history.location.path, pages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const scrollMethod = async () => {\r\n      const setPos = await parseInt(\r\n        sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n      );\r\n      setTimeout(() => {\r\n        window.scrollTo(0, setPos);\r\n      }, 100);\r\n    };\r\n    scrollMethod();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const cancelToken = axios.CancelToken;\r\n    const source = cancelToken.source();\r\n    getPopularMovies(pages, source.token).catch((e) => {});\r\n\r\n    return () => {\r\n      source.cancel(\"canceled async call\");\r\n    };\r\n  }, [pages, getPopularMovies]);\r\n\r\n  const loadHandler = () => {\r\n    setPages(pages + 1);\r\n    const path = history.location.pathname;\r\n    const pos = document.body.scrollTop || document.documentElement.scrollTop;\r\n    sessionStorage.setItem(`scroll${path}`, pos);\r\n  };\r\n  return (\r\n    <>\r\n      {movies !== null && movies.length !== 0 && (\r\n        <MovieCardHolder movies={movies} />\r\n      )}\r\n      <div className=\"load-cont\">\r\n        <div className=\"load-more-btn\" onClick={() => loadHandler()}>\r\n          Load more...\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\n\r\nconst NowPlaying = () => {\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const setPos = parseInt(\r\n      sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n    );\r\n    window.scrollTo(0, setPos);\r\n  }, [history.location.pathname]);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getNowPlaying = useCallback(async () => {\r\n    const arr = await ADAPTER.getNowPlaying();\r\n    const filtered = arr.data.results.filter(\r\n      (x) => x.original_language === \"en\"\r\n    );\r\n    setMovies(filtered);\r\n  }, [ADAPTER]);\r\n  useEffect(() => getNowPlaying(), [getNowPlaying]);\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && <MovieCardHolder movies={movies} />}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NowPlaying;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MovieCardHolder from \"../../Components/MovieCardHolder/MovieCardHolder\";\r\nimport Footer from \"../../Components/Navbar/Footer\";\r\nimport MovieREST from \"../../MovieApi/MovieREST\";\r\nimport TvREST from \"../../MovieApi/TvREST\";\r\n\r\nconst Upcoming = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const [ADAPTER] = useState(\r\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? MovieREST : TvREST\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => {\r\n    const setPos = parseInt(\r\n      sessionStorage.getItem(`scroll${history.location.pathname}`)\r\n    );\r\n    window.scrollTo(0, setPos);\r\n  }, [history.location.pathname]);\r\n\r\n  const getUpcoming = useCallback(async () => {\r\n    const arr = await ADAPTER.getUpcoming();\r\n    const filtered = arr.data.results.filter(\r\n      (x) => x.original_language === \"en\"\r\n    );\r\n    setMovies(filtered);\r\n  }, [ADAPTER]);\r\n\r\n  useEffect(() => getUpcoming(), [getUpcoming]);\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && <MovieCardHolder movies={movies} />}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upcoming;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./TopButton.css\";\r\nconst TopButton = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    window.onscroll = function () {\r\n      scrollHandler();\r\n    };\r\n    scrollHandler();\r\n    window.onclick = function () {\r\n      const elem = document.getElementById(\"mobile-menu\");\r\n\r\n      elem.classList.remove(\"toggle\");\r\n    };\r\n  }, []);\r\n\r\n  const scrollHandler = () => {\r\n    const elem = document.getElementById(\"top-button\");\r\n    if (\r\n      document.body.scrollTop > 500 ||\r\n      document.documentElement.scrollTop > 500\r\n    ) {\r\n      elem.style.display = \"block\";\r\n    } else {\r\n      elem.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n    sessionStorage.setItem(`scroll${history.location.pathname}`, 0);\r\n  };\r\n  return (\r\n    <i\r\n      onClick={() => clickHandler()}\r\n      id=\"top-button\"\r\n      className=\"fas fa-chevron-circle-up fa-3x top-button\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default TopButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Main.css\";\r\nconst Main = () => {\r\n  useEffect(() => {\r\n    const elem = document.getElementById(\"n\");\r\n    elem.classList.add(\"hide-nav\");\r\n\r\n    return () => elem.classList.remove(\"hide-nav\");\r\n  }, []);\r\n\r\n  const setTv = () => {\r\n    sessionStorage.setItem(\"SELECTOR\", \"tv\");\r\n  };\r\n\r\n  const setMovie = () => {\r\n    sessionStorage.setItem(\"SELECTOR\", \"movie\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n      <div className=\"select-cont\">\r\n        <Link to=\"/Home\" style={{ textDecoration: \"none\" }}>\r\n          <div onClick={() => setTv()} className=\"select\">\r\n            Tv-series\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/Home\" style={{ textDecoration: \"none\" }}>\r\n          <div onClick={() => setMovie()} className=\"select\">\r\n            Movies\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Navbar from \"./Components/Navbar/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport MovieProfile from \"./Pages/MovieProfilePage/MovieProfile\";\nimport \"./App.css\";\nimport Popular from \"./Pages/PopularPage/Popular\";\nimport NowPlaying from \"./Pages/NowPlaying/NowPlaying\";\nimport Upcoming from \"./Pages/Upcoming/Upcoming\";\nimport TopButton from \"./Components/TopButton/TopButton\";\nimport Main from \"./Pages/Main/Main\";\nimport { useState } from \"react\";\nimport Providers from \"./Components/Providers/Providers\";\n\nfunction App() {\n  const [isMovie, setIsMovie] = useState(\n    sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false\n  );\n  const setTag = () => {\n    setIsMovie(sessionStorage.getItem(\"SELECTOR\") === \"movie\" ? true : false);\n  };\n\n  return (\n    <>\n      <Navbar isMovie={isMovie} />\n      <TopButton />\n      <Switch>\n        <Route exact path=\"/\" component={Main}></Route>\n        <Route\n          exact\n          path=\"/Home\"\n          render={(props) => <Home {...props} setNav={setTag} />}\n        ></Route>\n        <Route\n          exact\n          path=\"/MovieProfile/:id\"\n          render={(props) => <MovieProfile {...props} />}\n        ></Route>\n        <Route exact path=\"/Popular\" component={Popular}></Route>\n        <Route exact path=\"/NowPlaying\" component={NowPlaying}></Route>\n        <Route exact path=\"/Upcoming\" component={Upcoming}></Route>\n        <Route exact path=\"/TEST\" component={Providers}></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}